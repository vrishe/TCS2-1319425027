{-

  TASK 2 - Merge hashmaps (dictionaries)
  Write the method that merges two hashmaps into one. When keys of hashmaps
  interesect - values from first hashmap should be used, while discarded
  key/value pairs should be stored into separate hashmap.
  Method should return two hashmaps (merged_dict, discarded_dict). If any
  of resulting hashmaps is empty it should be represented by `null` value.
  Hashmap key length is 256 bit. Each hashmap has at most 256 elements.
-}

#include "main.fc";

;; testable
(cell, cell) merge_hashmaps(cell dict1, cell dict2) method_id {
  cell md_dict = new_dict();
  cell dd_dict = new_dict();

  (int k, slice v, int present) = dict1.udict_get_min?(256);
  while present {
    md_dict~udict_add?(256, k, v);
    (k, v, present) = dict1.udict_get_next?(256, k);
  }

  (k, v, present) = dict2.udict_get_min?(256);
  while present {
    if ~ md_dict~udict_add?(256, k, v) { 
      dd_dict~udict_add?(256, k, v);
    }
    (k, v, present) = dict2.udict_get_next?(256, k);
  }

  return (md_dict, dd_dict);
}
